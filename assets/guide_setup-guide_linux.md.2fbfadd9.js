import{_ as s,c as l,a as e,b as n,t as o,d as t,o as r}from"./app.27d94af6.js";const m=JSON.parse('{"title":"Linux","description":"","frontmatter":{"lang":"en-US","title":"Linux"},"headers":[{"level":2,"title":"Preparation","slug":"preparation","link":"#preparation","children":[{"level":3,"title":"Docker Setup","slug":"docker-setup","link":"#docker-setup","children":[]},{"level":3,"title":"OCR4all setup","slug":"ocr4all-setup","link":"#ocr4all-setup","children":[]},{"level":3,"title":"Browser access and further use","slug":"browser-access-and-further-use","link":"#browser-access-and-further-use","children":[]}]}],"relativePath":"guide/setup-guide/linux.md","lastUpdated":1668008480000}'),i={name:"guide/setup-guide/linux.md"},c={id:"setup-guide-\u2013-frontmatter-title",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#setup-guide-\u2013-frontmatter-title","aria-hidden":"true"},"#",-1),d=t(`<h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-hidden="true">#</a></h2><p>You have to prepare the following folder structure:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500\u2500 ocr4all</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 data</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   |   \u251C\u2500\u2500 [Your book]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   |   |   \u251C\u2500\u2500 input</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   |   |   |   \u251C\u2500\u2500 0001.png</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   |   |   |   \u251C\u2500\u2500 0002.png</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   |   |   |   \u251C\u2500\u2500 ...</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502   \u251C\u2500\u2500 models</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Explanation:</p><ul><li><code>ocr4all</code> (main folder)</li><li><code>models</code> (folder for the neural network models)</li><li><code>data</code> (folder for the documents you want to recognize)</li><li><code>[Your book]</code> (folder that contains all data of a single, specific print/book)</li><li><code>input</code> (folder for original, coloured / grayscaled book scans on page level)</li></ul><h3 id="docker-setup" tabindex="-1">Docker Setup <a class="header-anchor" href="#docker-setup" aria-hidden="true">#</a></h3><ul><li><a href="https://docs.docker.com/desktop/install/linux-install/" target="_blank" rel="noreferrer">Install Docker Desktop on Linux</a></li><li>...and appreciate that everything works without further adjustments!</li></ul><h3 id="ocr4all-setup" tabindex="-1">OCR4all setup <a class="header-anchor" href="#ocr4all-setup" aria-hidden="true">#</a></h3><ul><li>The OCR4all folder structure detailed above (<code>Preparation</code>) can be located anywhere you want.</li><li>Open a terminal inside the OCR4all folder and load an OCR4all image by using the following command (this will take up a few minutes and requires a stable connection to the internet):</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker pull uniwuezpd/ocr4all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>Create the OCR4all container using the following command:</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">sudo docker run -p 1476:8080 \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    -u \`id -u root\`:\`id -g $USER\` \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    --name ocr4all \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    -v $PWD/data:/var/ocr4all/data \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    -v $PWD/models:/var/ocr4all/models/custom \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    -it uniwuezpd/ocr4all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>Do not enter line breaks manually!</li></ul><h3 id="browser-access-and-further-use" tabindex="-1">Browser access and further use <a class="header-anchor" href="#browser-access-and-further-use" aria-hidden="true">#</a></h3><ul><li><p>OCR4all is optimized for Chrome/Chromium.</p></li><li><p>Browser access: <a href="http://localhost:1476/ocr4all/" target="_blank" rel="noreferrer"><a href="http://localhost:1476/ocr4all/" target="_blank" rel="noreferrer">http://localhost:1476/ocr4all/</a></a></p></li><li><p>In the browser tool, check <code>Project Overview</code> -&gt; <code>Project selection</code>: If you can find the two pre-loaded books called &quot;Cirurgia&quot; and &quot;GNM&quot;, the mapping (<code>-v $PWD/data:/\u2026</code>) is working properly.</p></li><li><p>Otherwise, it\xB4s likely that there was a typo in the \u201Cdocker run\u201D command, so you will have to create the container again. First, delete the container you just created:</p></li><li><p>Stop the process in the terminal using CTRL+C, then type:</p></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker rm ocr4all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ul><li>Check and correct your command (as with most terminals, you can sift through your previous commands using the arrow keys), especially the <code>-v $PWD/data:/\u2026</code> lines, then run it again.</li><li>If everything is set up properly, you are able to restart OCR4all in the future by using:</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker start \u2013ia ocr4all</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,18);function u(a,h,C,g,y,f){return r(),l("div",null,[e("h1",c,[n("Setup guide \u2013 "+o(a.$frontmatter.title)+" ",1),p]),d])}const k=s(i,[["render",u]]);export{m as __pageData,k as default};
