import{_ as s,o as l,c as n,k as e,a as o,t,Q as p}from"./chunks/framework.abd19ccc.js";const b=JSON.parse('{"title":"macOS","description":"","frontmatter":{"lang":"en-US","title":"macOS"},"headers":[],"relativePath":"guide/setup-guide/macos.md","filePath":"guide/setup-guide/macos.md","lastUpdated":1701336366000}'),r={name:"guide/setup-guide/macos.md"},c={id:"setup-guide-–-frontmatter-title",tabindex:"-1"},i=e("a",{class:"header-anchor",href:"#setup-guide-–-frontmatter-title","aria-label":'Permalink to "Setup Guide – {{ $frontmatter.title }}"'},"​",-1),d=p(`<h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><p>You have to prepare the following folder structure:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">...</span></span>
<span class="line"><span style="color:#e1e4e8;">├── ocr4all</span></span>
<span class="line"><span style="color:#e1e4e8;">│   ├── data</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   ├── [Your book]</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   ├── input</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   |   ├── 0001.png</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   |   ├── 0002.png</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   |   ├── ...</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   ├── [Another book]</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   ├── input</span></span>
<span class="line"><span style="color:#e1e4e8;">│   |   |   |   ...</span></span>
<span class="line"><span style="color:#e1e4e8;">│   ├── models</span></span>
<span class="line"><span style="color:#e1e4e8;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">...</span></span>
<span class="line"><span style="color:#24292e;">├── ocr4all</span></span>
<span class="line"><span style="color:#24292e;">│   ├── data</span></span>
<span class="line"><span style="color:#24292e;">│   |   ├── [Your book]</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   ├── input</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   |   ├── 0001.png</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   |   ├── 0002.png</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   |   ├── ...</span></span>
<span class="line"><span style="color:#24292e;">│   |   ├── [Another book]</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   ├── input</span></span>
<span class="line"><span style="color:#24292e;">│   |   |   |   ...</span></span>
<span class="line"><span style="color:#24292e;">│   ├── models</span></span>
<span class="line"><span style="color:#24292e;">...</span></span></code></pre></div><p>Explanation:</p><ul><li><code>ocr4all</code> (main folder)</li><li><code>models</code> (folder for the neural network models)</li><li><code>data</code> (folder for the documents you want to recognize)</li><li><code>[Your book]</code> (folder that contains all data of a single, specific print/book)</li><li><code>input</code> (folder for original, coloured / grayscaled book scans on page level)</li></ul><h3 id="docker-setup" tabindex="-1">Docker Setup <a class="header-anchor" href="#docker-setup" aria-label="Permalink to &quot;Docker Setup&quot;">​</a></h3><ul><li><a href="https://docs.docker.com/desktop/install/mac-install/" target="_blank" rel="noreferrer">Install Docker Desktop on macOS</a></li></ul><h3 id="ocr4all-setup" tabindex="-1">OCR4all setup <a class="header-anchor" href="#ocr4all-setup" aria-label="Permalink to &quot;OCR4all setup&quot;">​</a></h3><ul><li>The OCR4all folder structure detailed above (<code>Preparation</code>) can be located anywhere you want.</li><li>Open a terminal inside the OCR4all folder and load an OCR4all image by using the following command (this will take up a few minutes and requires a stable connection to the internet):</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker pull uniwuezpd/ocr4all</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker pull uniwuezpd/ocr4all</span></span></code></pre></div><ul><li>Create the OCR4all container using the following command:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">sudo docker run -p 1476:8080 \\</span></span>
<span class="line"><span style="color:#e1e4e8;">    --name ocr4all \\</span></span>
<span class="line"><span style="color:#e1e4e8;">    -v $PWD/data:/var/ocr4all/data \\</span></span>
<span class="line"><span style="color:#e1e4e8;">    -v $PWD/models:/var/ocr4all/models/custom \\</span></span>
<span class="line"><span style="color:#e1e4e8;">    -it uniwuezpd/ocr4all</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">sudo docker run -p 1476:8080 \\</span></span>
<span class="line"><span style="color:#24292e;">    --name ocr4all \\</span></span>
<span class="line"><span style="color:#24292e;">    -v $PWD/data:/var/ocr4all/data \\</span></span>
<span class="line"><span style="color:#24292e;">    -v $PWD/models:/var/ocr4all/models/custom \\</span></span>
<span class="line"><span style="color:#24292e;">    -it uniwuezpd/ocr4all</span></span></code></pre></div><ul><li>Do not enter line breaks manually!</li></ul><h3 id="browser-access-and-further-use" tabindex="-1">Browser access and further use <a class="header-anchor" href="#browser-access-and-further-use" aria-label="Permalink to &quot;Browser access and further use&quot;">​</a></h3><ul><li><p>OCR4all is optimized for Chrome/Chromium.</p></li><li><p>Browser access: <a href="http://localhost:1476/ocr4all/" target="_blank" rel="noreferrer"><a href="http://localhost:1476/ocr4all/" target="_blank" rel="noreferrer">http://localhost:1476/ocr4all/</a></a></p></li><li><p>If you want to check whether the mapping is working correctly you can add the example projects <code>Cirurgia</code> and <code>GNM</code> from <a href="https://github.com/OCR4all/getting_started/tree/master/ocr4all/data" target="_blank" rel="noreferrer">here</a> to your <code>data</code> directory. In the browser, check <code>Project Overview</code> -&gt; <code>Project selection</code>: If you can find the two aforementioned books (or any other book that you added), the mapping (<code>-v $PWD/data:/…</code>) is working properly.</p></li><li><p>Otherwise, it´s likely that there was a typo in the “docker run” command, so you will have to create the container again. First, delete the container you just created:</p></li><li><p>Stop the process in the terminal using CTRL+C, then type:</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker rm ocr4all</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker rm ocr4all</span></span></code></pre></div><ul><li>Check and correct your command (as with most terminals, you can sift through your previous commands using the arrow keys), especially the <code>-v $PWD/data:/…</code> lines, then run it again.</li><li>If everything is set up properly, you are able to restart OCR4all in the future by using:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker start –ia ocr4all</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker start –ia ocr4all</span></span></code></pre></div>`,18);function u(a,h,y,g,m,k){return l(),n("div",null,[e("h1",c,[o("Setup Guide – "+t(a.$frontmatter.title)+" ",1),i]),d])}const v=s(r,[["render",u]]);export{b as __pageData,v as default};
