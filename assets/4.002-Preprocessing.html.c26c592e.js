import{_ as e,e as n}from"./app.b397120f.js";import{_ as r}from"./Abb9.0cfba348.js";const i={},t=n('<h3 id="_4-2preprocessing" tabindex="-1"><a class="header-anchor" href="#_4-2preprocessing" aria-hidden="true">#</a> 4.2 Preprocessing</h3><p><strong>Input:</strong> Originalbild (farbig, in Graustufen oder bin\xE4r)<br><strong>Output:</strong> entzerrtes Bin\xE4r- (und Graustufen-)Bild</p><ul><li>Dieser Bearbeitungsschritt dient der Erstellung von Bin\xE4r- und normalisierten Graustufenbildern, welche die Grundlage f\xFCr erfolgreiche Segmentierung und OCR darstellen.</li><li>In der rechten Seitenleiste werden alle Scans ausgew\xE4hlt, die bearbeitet werden sollen; alle Einstellungen (\u201ESettings (General)\u201C und \u201ESettings (Advanced)\u201C) bleiben bestehen, d. h. der Winkel der zu bearbeitenden Bilder bleibt unver\xE4ndert, ebenso die automatisch generierte Anzahl der durch das Teilmodul verwendeten CPUs (letzteres betrifft alle folgenden Teilmodule von OCR4all!).</li></ul><p><img src="'+r+'" alt="Abb9.png"></p><p>Abb. 8: Einstellungen zum Preprocessing.</p><ul><li>Der Binarisierungsvorgang kann durch einen Klick auf \u201EEXECUTE\u201D gestartet werden. Der Verlauf des Arbeitsschritts kann in der Konsole, genauer dem \u201EConsole Output\u201C, verfolgt werden. Ggf. werden in \u201EConsole Error\u201C w\xE4hrend des Binarisierungsprozesses Warnungen ausgegeben. Diese haben jedoch keine Auswirkungen auf das Ergebnis der Binarisierung.</li><li>Ob die Binarisierung erfolgreich war, kann unter \u201EProject Overview\u201D und durch den Klick auf einen beliebigen \u201EPage Identifier\u201D sowie die Bildanzeige \u201EBinary\u201D kontrolliert werden. Au\xDFerdem sollten in der Projekt\xFCbersicht in der Spalte \u201CPreprocessing\u201D f\xFCr alle bearbeiteten Bilddateien Haken erschienen sein.</li></ul>',6);function s(l,a){return t}var o=e(i,[["render",s],["__file","4.002-Preprocessing.html.vue"]]);export{o as default};
